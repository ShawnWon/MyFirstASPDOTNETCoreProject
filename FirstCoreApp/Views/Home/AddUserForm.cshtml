@model FirstCoreApp.Models.Users
@{
    ViewBag.Title = "AddUserForm";
}

<h2>AddUserForm</h2>

@using (Html.BeginForm("SubmitNewUser", "Home", FormMethod.Post))
{
    <table>
        <tr>
            <td>@Html.LabelFor(x => x.Name):</td>
            <td>@Html.TextBoxFor(x => x.Name, new { id = "username" })</td>  @*The name of this textbox is "UserName", the attribute of model user.*@
            <td>@Html.ValidationMessageFor(x => x.Name)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(x => x.Email):</td>
            <td>@Html.TextBoxFor(x => x.Email)</td>
            <td>@Html.ValidationMessageFor(x => x.Email)</td>

        </tr>

        <tr>
            <td>@Html.LabelFor(x => x.Gender):</td>
            <td>@Html.RadioButtonFor(x => x.Gender, "Male") Male @Html.RadioButtonFor(x => x.Gender, "Female") Female</td>
            <td>@Html.ValidationMessageFor(x => x.Gender)</td>

        </tr>
        <tr>
            <td>@Html.LabelFor(x => x.RegDate):</td>
            <td>@Html.EditorFor(x => x.RegDate, new { @type = "date", @Value = DateTime.Today.Date, htmlAttributes = new { @onchange = "checkDate()" } })</td>
            <td>@Html.ValidationMessageFor(x => x.RegDate)</td>

        </tr>


        <tr>

            <td>@Html.LabelFor(x => x.boxes):</td>
            <td>
                @for (int i = 0; i < Model.boxes.Count; i++)
                {
                    @Html.CheckBoxFor(m => Model.boxes[i].IsChecked, new { @class = "checkboxcls"})
                    @Model.boxes[i].Text
                    @Html.HiddenFor(m => Model.boxes[i].Text)
                    @Html.HiddenFor(m => Model.boxes[i].Id)





                }
            </td>
            <td>
                <span id="Checkbox-error" class="field-validation-error">
                    <span>Select at least one day.</span>
                </span>
            </td>


        </tr>

        <tr>
            <td>@Html.LabelFor(x => x.AddReq):</td>
            <td>@Html.TextBoxFor(x => x.AddReq)</td>
            <td>@Html.ValidationMessageFor(x => x.AddReq)</td>

        </tr>


        <tr>
            <td colspan="2" align="right"><input id="submitBtn" type="submit" value="Submit" style="color:midnightblue" /></td>
        </tr>


    </table>
}




<!--
    <script>
    function checkDate() {

        Date.prototype.addDays = function (days) {
            var date = new Date(this.valueOf());
            date.setDate(date.getDate() + days);
            return date;}

                var dateString = document.getElementById('RegDate').value;
                var RegDate = new Date(dateString);

                var todaysDate = new Date();

                var deadline = todaysDate.addDays(30);


                if (RegDate > deadline) {
                    alert("Reg date out of range.");
                    return false;
                }

                if (RegDate.setHours(0, 0, 0, 0) < todaysDate.setHours(0, 0, 0, 0)) {
                    alert("Reg date cannot in past.");
                    return false;
                }
                return true;
            }
</script>
    -->

@section Scripts {
   
    <script type="text/javascript">
        var declarationsError = $('#Checkbox-error');
        $('form').submit(function () {

            

            if ($(".checkboxcls:checkbox:checked").length > 0) {
                declarationsError.hide();
                return true;
            } else {
                declarationsError.show();
                return false;
            }
        });

        $('.checkboxcls').change(function () {
            

            if ($(this).is(':checked')) {
                declarationsError.hide(); // hide error message
            }

            if ($(".checkboxcls:checkbox:checked").length = 0) {
                declarationsError.show();
            }
        });
    </script>
}